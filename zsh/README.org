#+TITLE: 4nd2in's zsh runtime config
#+AUTHOR: 4nd2in
#+PROPERTY: header-args :tangle .zshrc

* CONTENT :toc:
- [[#header][HEADER]]
- [[#aliases][ALIASES]]
  - [[#apps--files][APPS & FILES]]
  - [[#git][GIT]]
  - [[#shell][SHELL]]
- [[#exports][EXPORTS]]
- [[#history][HISTORY]]
- [[#keybindings][KEYBINDINGS]]
- [[#options][OPTIONS]]
- [[#prompt][PROMPT]]
- [[#style][STYLE]]
- [[#helper-functions][HELPER FUNCTIONS]]

* HEADER
#+begin_src shell
# author: 4nd2in

# ------------------------------------------------------------------------------
# ADDITIONAL CONFIGS
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# MAIN CONFIG
# ------------------------------------------------------------------------------
#+end_src

* ALIASES
** APPS & FILES
#+begin_src shell
# APPS & FILES ALIASES
alias vimrc='vim $HOME/.vimrc'
alias zshrc='vim $HOME/.zshrc'
alias zshsrc='source $HOME/.zshrc'
#+end_src

** GIT
#+begin_src shell
# GIT ALIASES
alias add='git add'
alias adda='git add .'
alias amend='git commit --amend'
alias branchmv='git branch -m'
alias commit='git commit -m'
alias commita='git commit -am'
alias clone='git clone'
alias glog='git log --graph --abbrev-commit --decorate --all --oneline'
alias pull='git pull origin'
alias push='git push'
alias restore='git restore'
alias rmstaged='git restore --staged'
alias stash='git stash'
alias stat='git status'
alias subadd='git submodule add'
alias subinit='git submodule init'
alias subup='git submodule update'
alias switch='git switch'
alias switchc='git switch -c'
#+end_src

** SHELL
#+begin_src shell
# SHELL ALIASES
alias ..='cd ..'
alias ll='ls -lah --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'
#+end_src

* EXPORTS
#+begin_src shell
# EXPORTS
export EDITOR=vim
export VISUAL=vim
#+end_src

* HISTORY
#+begin_src shell
# HISTORY
HISTFILE=$HOME/.zsh_history
HISTSIZE=100000
SAVEHIST=100000
#+end_src

* KEYBINDINGS
Adding custom zsh keybindings. Zsh is using GNU Emacs keybinding per default. This can be changed to vi keybindings if needed.
To edit long commands in EDITOR and execute them after saving, 'edit-command-line' is used.

| Sequence | Key        |
|----------+------------|
| ^[[A     | Arrow Up   |
| ^[[B     | Arrow Down |
| ^x^e     | C-x C-e    |

#+begin_src shell
# KEYBINDINGS
bindkey -e # -e for emacs -v for vi keybindings
bindkey "^[[A" history-beginning-search-backward
bindkey "^[[B" history-beginning-search-forward
autoload -U edit-command-line
zle -N edit-command-line
bindkey '^x^e' edit-command-line
#+end_src

* OPTIONS
#+begin_src shell
# OPTIONS
setopt SHARE_HISTORY
# allow '#', '~' and '^' when globbing
setopt extended_glob
#+end_src
* PROMPT
Setting a custom prompt

| Variable   | Description                                                            |
|------------+------------------------------------------------------------------------|
| PROMPT     | Left side of the prompt                                                |
| RPROMPT    | Right side of the prompt                                               |
| %D         | The date in yy-mm-dd format                                            |
| %D{string} | string is formatted using the strftime function                        |
| %F{color}  | Setting prompt color                                                   |
| %f         | Resetting prompt color to default                                      |
| %l         | Username                                                               |
| %M         | Full hostname                                                          |
| %m         | The hostname up to the first '.', int can be added after '%'           |
| %T         | Current time in 24h format                                             |
| %t         | Current time in 12h format                                             |
| %*         | Current time in 24h format with seconds                                |
| %?         | The return status of the last command before prompt                    |
| %#         | A '#' if the shell has privileges, a '%' if not. same as '%(!.#.%%)'   |
| %/ or %d   | CWD, int can be added after '%' for trailing components, 0 = full path |
| %~         | As %d and %/, but if CWD is $HOME it is replaced with '~'              |


#+begin_src shell
# PROMPT
precmd_functions=(render-prompt)
#+end_src

* STYLE
#+begin_src shell
# STYLE
# case-insensitive matching
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
# use completion menu
zstyle ':completion:*' menu select
#+end_src

* HELPER FUNCTIONS
#+begin_src shell
# ------------------------------------------------------------------------------
# HELPER FUNCTIONS
# ------------------------------------------------------------------------------
function render-prompt {
    if (( ${+SSH_CLIENT} )); then
        PROMPT="%F{yellow}SSH%f "
    else
        PROMPT=""
    fi
    PROMPT+="%(1j.%B%%%b .)"
    PROMPT+="%~ "
    PROMPT+="%(?.%F{green}.%F{red})%Bâ–Œ%b%f "
}
#+end_src
