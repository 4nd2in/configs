#+TITLE: 4nd2in's Doom Emacs Config
#+AUTHOR: 4nd2in
#+PROPERTY: header-args :tangle config.el

* CONTENT :toc:
- [[#about][ABOUT]]
  - [[#how-to-use][How to use]]
  - [[#activate-meta-in-iterm][Activate Meta in iTerm]]
  - [[#about-fonts][About Fonts]]
  - [[#credentials][Credentials]]
- [[#dired][DIRED]]
  - [[#keybindings-to-open-dired][Keybindings To Open Dired]]
  - [[#keybindings-within-dired][Keybindings Within Dired]]
  - [[#keybindings-within-dired-with-peep-dired-mode-enabled][Keybindings Within Dired With Peep-Dired-Mode Enabled]]
- [[#emojis][EMOJIS]]
- [[#fonts][FONTS]]
- [[#frame-size][FRAME SIZE]]
- [[#org-mode][ORG MODE]]
- [[#projectile][PROJECTILE]]
- [[#line-settings][LINE SETTINGS]]
- [[#theme][THEME]]

* ABOUT
Personal Doom Emacs Config written in ORG Mode. Because its cool. Anyway here a short description how to use this file:

** How to use
| COMMAND           | DESCRIPTION                                                             | KEYBINDING |
|-------------------+-------------------------------------------------------------------------+------------|
| org-ctrl-c-ctrl-c | /Use this with your cursor placed in the header to refresh the document./ | C-c C-c    |
| org-babel-tangle  | /Write out all code blocks to the file specified in the header./          | C-c C-v t  |

** Activate Meta in iTerm
In iTerm2 option/alt keys can not be used as meta key by default. To use it as meta you have to create a new profile. In the "Keys" tab, choose "Esc+" for one of your option keys.

** About Fonts
Terminal-based applications do not support multiple fonts and thus can not show icons. To support multiple fonts (including icons) the gui version of Emacs must be used.

** Credentials
#+begin_src emacs-lisp
(setq user-full-name "4nd2in")
#+end_src

* DIRED
Dired is the file manager within Emacs.  Below, I setup keybindings for image previews (peep-dired).  Doom Emacs does not use 'SPC d' for any of its keybindings, so I've chosen the format of 'SPC d' plus 'key'.

** Keybindings To Open Dired
| COMMAND    | DESCRIPTION                        | KEYBINDING |
|------------+------------------------------------+------------|
| dired      | /Open dired file manager/            | SPC-d-d    |
| dired-jump | /Jump to current directory in dired/ | SPC-d-j    |

** Keybindings Within Dired
| COMMAND             | DESCRIPTION                                 | KEYBINDING |
|---------------------+---------------------------------------------+------------|
| dired-view-file     | /View file in dired/                          | SPC-d-v    |
| dired-up-directory  | /Go up in directory tree/                     | h          |
| dired-find-file     | /Go down in directory tree (or open if file)/ | l          |
| dired-next-line     | Move down to next line                      | j          |
| dired-previous-line | Move up to previous line                    | k          |
| dired-mark          | Mark file at point                          | m          |
| dired-unmark        | Unmark file at point                        | u          |

** Keybindings Within Dired With Peep-Dired-Mode Enabled
| COMMAND              | DESCRIPTION                              | KEYBINDING |
|----------------------+------------------------------------------+------------|
| peep-dired           | /Toggle previews within dired/             | SPC-d-p    |
| peep-dired-next-file | /Move to next file in peep-dired-mode/     | j          |
| peep-dired-prev-file | /Move to previous file in peep-dired-mode/ | k          |

#+BEGIN_SRC emacs-lisp
(map! :leader
      (:prefix ("d" . "dired")
       :desc "Open dired" "d" #'dired
       :desc "Dired jump to current" "j" #'dired-jump)
      (:after dired
       (:map dired-mode-map
        :desc "Peep-dired image previews" "d p" #'peep-dired
        :desc "Dired view file" "d v" #'dired-view-file)))
;; Make 'h' and 'l' go back and forward in dired. Much faster to navigate the directory structure!
(evil-define-key 'normal dired-mode-map
  (kbd "M-RET") 'dired-display-file
  (kbd "h") 'dired-up-directory
  (kbd "l") 'dired-open-file ; use dired-find-file instead of dired-open.
  (kbd "m") 'dired-mark
  (kbd "t") 'dired-toggle-marks
  (kbd "u") 'dired-unmark
  (kbd "C") 'dired-do-copy
  (kbd "D") 'dired-do-delete
  (kbd "J") 'dired-goto-file
  (kbd "M") 'dired-chmod
  (kbd "O") 'dired-chown
  (kbd "P") 'dired-do-print
  (kbd "R") 'dired-rename
  (kbd "T") 'dired-do-touch
  (kbd "Y") 'dired-copy-filenamecopy-filename-as-kill ; copies filename to kill ring.
  (kbd "+") 'dired-create-directory
  (kbd "-") 'dired-up-directory
  (kbd "% l") 'dired-downcase
  (kbd "% u") 'dired-upcase
  (kbd "; d") 'epa-dired-do-decrypt
  (kbd "; e") 'epa-dired-do-encrypt)
;; If peep-dired is enabled, you will get image previews as you go up/down with 'j' and 'k'
(evil-define-key 'normal peep-dired-mode-map
  (kbd "j") 'peep-dired-next-file
  (kbd "k") 'peep-dired-prev-file)
(add-hook 'peep-dired-hook 'evil-normalize-keymaps)
;; Get file icons in dired
(add-hook 'dired-mode-hook 'all-the-icons-dired-mode)
#+END_SRC

* EMOJIS
Emojify is an extension for Emacs to display emojis. It can display GitHub style emojis like :smile: or plain ascii ones like :)
#+begin_src emacs-lisp
(use-package emojify
  :hook (after-init . global-emojify-mode))
#+end_src

* FONTS
Related doom emacs font settings:
+ 'doom-font' -- standard monospace font that is used for most things in Emacs.
+ 'doom-variable-pitch-font' -- variable font which is useful in some Emacs plugins.
+ 'doom-big-font' -- used in doom-big-font-mode; useful for presentations.
+ 'font-lock-comment-face' -- for comments.
+ 'font-lock-keyword-face' -- for keywords with special significance like 'setq' in elisp.
+ 'global-prettify-symbols-mode' -- change certain keywords to symbols, such as lambda!

#+begin_src emacs-lisp
(setq doom-font (font-spec :family "mononoki" :size 15)
      doom-variable-pitch-font (font-spec :family "Arial" :size 15)
      doom-big-font (font-spec :family "mononoki" :size 24))
(after! doom-themes
  (setq doom-themes-enable-bold t
        doom-themes-enable-italic t))
(custom-set-faces!
  '(font-lock-comment-face :slant italic)
  '(font-lock-keyword-face :slant italic))
#+end_src

* FRAME SIZE
Maximize width and height of the initial frame.

#+begin_src emacs-lisp
(add-to-list 'initial-frame-alist '(fullscreen . maximized))
#+end_src

* ORG MODE
My org directory:

#+begin_src emacs-lisp
(setq org-directory "~/org/")
#+end_src

Prettyfy org:

#+begin_src emacs-lisp
(setq org-hide-emphasis-markers t)
#+end_src


Set header fonts to different sizes:

#+begin_src emacs-lisp
(custom-set-faces
  '(org-level-1 ((t (:inherit outline-1 :height 1.2))))
  '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
  '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
  '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
  '(org-level-5 ((t (:inherit outline-5 :height 1.0))))
)
#+end_src

* PROJECTILE
Set the auto discovery directory:
#+begin_src emacs-lisp
(setq projectile-project-search-path '("~/Projects"))
#+end_src
* LINE SETTINGS
#+begin_src emacs-lisp
(setq display-line-numbers-type t)
#+end_src

* THEME
Using the BEST theme, other opinions are wrong:
#+begin_src emacs-lisp
(setq doom-theme 'doom-dracula)
#+end_src
